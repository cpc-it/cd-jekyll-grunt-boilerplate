!function e(t, n, r) {
    function s(o, u) {
        if (!n[o]) {
            if (!t[o]) {
                var a = "function" == typeof require && require;
                if (!u && a) return a(o, !0);
                if (i) return i(o, !0);
                throw new Error("Cannot find module '" + o + "'");
            }
            var f = n[o] = {
                exports: {}
            };
            t[o][0].call(f.exports, function(e) {
                var n = t[o][1][e];
                return s(n ? n : e);
            }, f, f.exports, e, t, n, r);
        }
        return n[o].exports;
    }
    for (var i = "function" == typeof require && require, o = 0; o < r.length; o++) s(r[o]);
    return s;
}({
    1: [ function(require, module, exports) {
        "use strict";
        function load(location, callback) {
            var xhr = getXHR();
            xhr.open("GET", location, !0), xhr.onreadystatechange = createStateChangeListener(xhr, callback), 
            xhr.send();
        }
        function createStateChangeListener(xhr, callback) {
            return function() {
                if (4 === xhr.readyState && 200 === xhr.status) try {
                    callback(null, JSON.parse(xhr.responseText));
                } catch (err) {
                    callback(err, null);
                }
            };
        }
        function getXHR() {
            return window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");
        }
        module.exports = {
            load: load
        };
    }, {} ],
    2: [ function(require, module, exports) {
        "use strict";
        module.exports = function OptionsValidator(params) {
            function validateParams(params) {
                return !!params && (void 0 !== params.required && params.required instanceof Array);
            }
            if (!validateParams(params)) throw new Error("-- OptionsValidator: required options missing");
            if (!(this instanceof OptionsValidator)) return new OptionsValidator(params);
            var requiredOptions = params.required;
            this.getRequiredOptions = function() {
                return requiredOptions;
            }, this.validate = function(parameters) {
                var errors = [];
                return requiredOptions.forEach(function(requiredOptionName) {
                    void 0 === parameters[requiredOptionName] && errors.push(requiredOptionName);
                }), errors;
            };
        };
    }, {} ],
    3: [ function(require, module, exports) {
        "use strict";
        function put(data) {
            return isObject(data) ? addObject(data) : isArray(data) ? addArray(data) : void 0;
        }
        function clear() {
            return data.length = 0, data;
        }
        function get() {
            return data;
        }
        function isObject(obj) {
            return !!obj && "[object Object]" === Object.prototype.toString.call(obj);
        }
        function isArray(obj) {
            return !!obj && "[object Array]" === Object.prototype.toString.call(obj);
        }
        function addObject(_data) {
            return data.push(_data), data;
        }
        function addArray(_data) {
            for (var added = [], i = 0; i < _data.length; i++) isObject(_data[i]) && added.push(addObject(_data[i]));
            return added;
        }
        function search(crit) {
            return crit ? findMatches(data, crit, opt.searchStrategy, opt) : [];
        }
        function setOptions(_opt) {
            opt = _opt || {}, opt.fuzzy = _opt.fuzzy || !1, opt.limit = _opt.limit || 10, opt.searchStrategy = _opt.fuzzy ? FuzzySearchStrategy : LiteralSearchStrategy;
        }
        function findMatches(data, crit, strategy, opt) {
            for (var matches = [], i = 0; i < data.length && matches.length < opt.limit; i++) {
                var match = findMatchesInObject(data[i], crit, strategy, opt);
                match && matches.push(match);
            }
            return matches;
        }
        function findMatchesInObject(obj, crit, strategy, opt) {
            for (var key in obj) if (!isExcluded(obj[key], opt.exclude) && strategy.matches(obj[key], crit)) return obj;
        }
        function isExcluded(term, excludedTerms) {
            var excluded = !1;
            excludedTerms = excludedTerms || [];
            for (var i = 0; i < excludedTerms.length; i++) {
                var excludedTerm = excludedTerms[i];
                !excluded && new RegExp(term).test(excludedTerm) && (excluded = !0);
            }
            return excluded;
        }
        module.exports = {
            put: put,
            clear: clear,
            get: get,
            search: search,
            setOptions: setOptions
        };
        var FuzzySearchStrategy = require("./SearchStrategies/FuzzySearchStrategy"), LiteralSearchStrategy = require("./SearchStrategies/LiteralSearchStrategy"), data = [], opt = {};
        opt.fuzzy = !1, opt.limit = 10, opt.searchStrategy = opt.fuzzy ? FuzzySearchStrategy : LiteralSearchStrategy;
    }, {
        "./SearchStrategies/FuzzySearchStrategy": 4,
        "./SearchStrategies/LiteralSearchStrategy": 5
    } ],
    4: [ function(require, module, exports) {
        "use strict";
        function FuzzySearchStrategy() {
            function fuzzyFrom(string) {
                var fuzzy = string.trim().split("").join(".*?").replace("??", "?");
                return new RegExp(fuzzy, "gi");
            }
            this.matches = function(string, crit) {
                if ("string" != typeof string || "string" != typeof crit) return !1;
                var fuzzy = fuzzyFrom(crit);
                return !!fuzzy.test(string);
            };
        }
        module.exports = new FuzzySearchStrategy();
    }, {} ],
    5: [ function(require, module, exports) {
        "use strict";
        function LiteralSearchStrategy() {
            this.matches = function(string, crit) {
                return "string" == typeof string && (string = string.trim(), string.toLowerCase().indexOf(crit.toLowerCase()) >= 0);
            };
        }
        module.exports = new LiteralSearchStrategy();
    }, {} ],
    6: [ function(require, module, exports) {
        "use strict";
        function setOptions(_options) {
            options.pattern = _options.pattern || options.pattern, options.template = _options.template || options.template, 
            "function" == typeof _options.middleware && (options.middleware = _options.middleware);
        }
        function compile(data) {
            return options.template.replace(options.pattern, function(match, prop) {
                var value = options.middleware(prop, data[prop], options.template);
                return void 0 !== value ? value : data[prop] || match;
            });
        }
        module.exports = {
            compile: compile,
            setOptions: setOptions
        };
        var options = {};
        options.pattern = /\{(.*?)\}/g, options.template = "", options.middleware = function() {};
    }, {} ],
    7: [ function(require, module, exports) {
        !function(window, document, undefined) {
            "use strict";
            function initWithJSON(json) {
                repository.put(json), registerInput();
            }
            function initWithURL(url) {
                jsonLoader.load(url, function(err, json) {
                    err && throwError("failed to get JSON (" + url + ")"), initWithJSON(json);
                });
            }
            function emptyResultsContainer() {
                options.resultsContainer.innerHTML = "";
            }
            function appendToResultsContainer(text) {
                options.resultsContainer.innerHTML += text;
            }
            function registerInput() {
                options.searchInput.addEventListener("keyup", function(e) {
                    var key = e.which, query = e.target.value;
                    isWhitelistedKey(key) && isValidQuery(query) && (emptyResultsContainer(), render(repository.search(query)));
                });
            }
            function render(results) {
                if (0 === results.length) return appendToResultsContainer(options.noResultsText);
                for (var i = 0; i < results.length; i++) appendToResultsContainer(templater.compile(results[i]));
            }
            function isValidQuery(query) {
                return query && query.length > 0;
            }
            function isWhitelistedKey(key) {
                return [ 13, 16, 20, 37, 38, 39, 40, 91 ].indexOf(key) === -1;
            }
            function throwError(message) {
                throw new Error("SimpleJekyllSearch --- " + message);
            }
            var options = {
                searchInput: null,
                resultsContainer: null,
                json: [],
                searchResultTemplate: '<li><a href="{url}" title="{desc}">{title}</a></li>',
                templateMiddleware: function() {},
                noResultsText: "No results found",
                limit: 10,
                fuzzy: !1,
                exclude: []
            }, requiredOptions = [ "searchInput", "resultsContainer", "json" ], templater = require("./Templater"), repository = require("./Repository"), jsonLoader = require("./JSONLoader"), optionsValidator = require("./OptionsValidator")({
                required: requiredOptions
            }), utils = require("./utils");
            window.SimpleJekyllSearch = function(_options) {
                var errors = optionsValidator.validate(_options);
                errors.length > 0 && throwError("You must specify the following required options: " + requiredOptions), 
                options = utils.merge(options, _options), templater.setOptions({
                    template: options.searchResultTemplate,
                    middleware: options.templateMiddleware
                }), repository.setOptions({
                    fuzzy: options.fuzzy,
                    limit: options.limit
                }), utils.isJSON(options.json) ? initWithJSON(options.json) : initWithURL(options.json);
            }, window.SimpleJekyllSearch.init = window.SimpleJekyllSearch;
        }(window, document);
    }, {
        "./JSONLoader": 1,
        "./OptionsValidator": 2,
        "./Repository": 3,
        "./Templater": 6,
        "./utils": 8
    } ],
    8: [ function(require, module, exports) {
        "use strict";
        function merge(defaultParams, mergeParams) {
            var mergedOptions = {};
            for (var option in defaultParams) mergedOptions[option] = defaultParams[option], 
            void 0 !== mergeParams[option] && (mergedOptions[option] = mergeParams[option]);
            return mergedOptions;
        }
        function isJSON(json) {
            try {
                return !!(json instanceof Object && JSON.parse(JSON.stringify(json)));
            } catch (e) {
                return !1;
            }
        }
        module.exports = {
            merge: merge,
            isJSON: isJSON
        };
    }, {} ]
}, {}, [ 7 ]), function(factory) {
    "use strict";
    "function" == typeof define && define.amd ? define([ "jquery" ], factory) : "undefined" != typeof module && module.exports ? module.exports = factory(require("jquery")) : factory(jQuery);
}(function($) {
    var _previousResizeWidth = -1, _updateTimeout = -1, _parse = function(value) {
        return parseFloat(value) || 0;
    }, _rows = function(elements) {
        var tolerance = 1, $elements = $(elements), lastTop = null, rows = [];
        return $elements.each(function() {
            var $that = $(this), top = $that.offset().top - _parse($that.css("margin-top")), lastRow = rows.length > 0 ? rows[rows.length - 1] : null;
            null === lastRow ? rows.push($that) : Math.floor(Math.abs(lastTop - top)) <= tolerance ? rows[rows.length - 1] = lastRow.add($that) : rows.push($that), 
            lastTop = top;
        }), rows;
    }, _parseOptions = function(options) {
        var opts = {
            byRow: !0,
            property: "height",
            target: null,
            remove: !1
        };
        return "object" == typeof options ? $.extend(opts, options) : ("boolean" == typeof options ? opts.byRow = options : "remove" === options && (opts.remove = !0), 
        opts);
    }, matchHeight = $.fn.matchHeight = function(options) {
        var opts = _parseOptions(options);
        if (opts.remove) {
            var that = this;
            return this.css(opts.property, ""), $.each(matchHeight._groups, function(key, group) {
                group.elements = group.elements.not(that);
            }), this;
        }
        return this.length <= 1 && !opts.target ? this : (matchHeight._groups.push({
            elements: this,
            options: opts
        }), matchHeight._apply(this, opts), this);
    };
    matchHeight.version = "0.7.0", matchHeight._groups = [], matchHeight._throttle = 80, 
    matchHeight._maintainScroll = !1, matchHeight._beforeUpdate = null, matchHeight._afterUpdate = null, 
    matchHeight._rows = _rows, matchHeight._parse = _parse, matchHeight._parseOptions = _parseOptions, 
    matchHeight._apply = function(elements, options) {
        var opts = _parseOptions(options), $elements = $(elements), rows = [ $elements ], scrollTop = $(window).scrollTop(), htmlHeight = $("html").outerHeight(!0), $hiddenParents = $elements.parents().filter(":hidden");
        return $hiddenParents.each(function() {
            var $that = $(this);
            $that.data("style-cache", $that.attr("style"));
        }), $hiddenParents.css("display", "block"), opts.byRow && !opts.target && ($elements.each(function() {
            var $that = $(this), display = $that.css("display");
            "inline-block" !== display && "flex" !== display && "inline-flex" !== display && (display = "block"), 
            $that.data("style-cache", $that.attr("style")), $that.css({
                display: display,
                "padding-top": "0",
                "padding-bottom": "0",
                "margin-top": "0",
                "margin-bottom": "0",
                "border-top-width": "0",
                "border-bottom-width": "0",
                height: "100px",
                overflow: "hidden"
            });
        }), rows = _rows($elements), $elements.each(function() {
            var $that = $(this);
            $that.attr("style", $that.data("style-cache") || "");
        })), $.each(rows, function(key, row) {
            var $row = $(row), targetHeight = 0;
            if (opts.target) targetHeight = opts.target.outerHeight(!1); else {
                if (opts.byRow && $row.length <= 1) return void $row.css(opts.property, "");
                $row.each(function() {
                    var $that = $(this), style = $that.attr("style"), display = $that.css("display");
                    "inline-block" !== display && "flex" !== display && "inline-flex" !== display && (display = "block");
                    var css = {
                        display: display
                    };
                    css[opts.property] = "", $that.css(css), $that.outerHeight(!1) > targetHeight && (targetHeight = $that.outerHeight(!1)), 
                    style ? $that.attr("style", style) : $that.css("display", "");
                });
            }
            $row.each(function() {
                var $that = $(this), verticalPadding = 0;
                opts.target && $that.is(opts.target) || ("border-box" !== $that.css("box-sizing") && (verticalPadding += _parse($that.css("border-top-width")) + _parse($that.css("border-bottom-width")), 
                verticalPadding += _parse($that.css("padding-top")) + _parse($that.css("padding-bottom"))), 
                $that.css(opts.property, targetHeight - verticalPadding + "px"));
            });
        }), $hiddenParents.each(function() {
            var $that = $(this);
            $that.attr("style", $that.data("style-cache") || null);
        }), matchHeight._maintainScroll && $(window).scrollTop(scrollTop / htmlHeight * $("html").outerHeight(!0)), 
        this;
    }, matchHeight._applyDataApi = function() {
        var groups = {};
        $("[data-match-height], [data-mh]").each(function() {
            var $this = $(this), groupId = $this.attr("data-mh") || $this.attr("data-match-height");
            groupId in groups ? groups[groupId] = groups[groupId].add($this) : groups[groupId] = $this;
        }), $.each(groups, function() {
            this.matchHeight(!0);
        });
    };
    var _update = function(event) {
        matchHeight._beforeUpdate && matchHeight._beforeUpdate(event, matchHeight._groups), 
        $.each(matchHeight._groups, function() {
            matchHeight._apply(this.elements, this.options);
        }), matchHeight._afterUpdate && matchHeight._afterUpdate(event, matchHeight._groups);
    };
    matchHeight._update = function(throttle, event) {
        if (event && "resize" === event.type) {
            var windowWidth = $(window).width();
            if (windowWidth === _previousResizeWidth) return;
            _previousResizeWidth = windowWidth;
        }
        throttle ? _updateTimeout === -1 && (_updateTimeout = setTimeout(function() {
            _update(event), _updateTimeout = -1;
        }, matchHeight._throttle)) : _update(event);
    }, $(matchHeight._applyDataApi), $(window).bind("load", function(event) {
        matchHeight._update(!1, event);
    }), $(window).bind("resize orientationchange", function(event) {
        matchHeight._update(!0, event);
    });
}), function(factory) {
    if ("function" == typeof define && define.amd) define(factory); else if ("object" == typeof exports) module.exports = factory(); else {
        var _OldCookies = window.Cookies, api = window.Cookies = factory();
        api.noConflict = function() {
            return window.Cookies = _OldCookies, api;
        };
    }
}(function() {
    function extend() {
        for (var i = 0, result = {}; i < arguments.length; i++) {
            var attributes = arguments[i];
            for (var key in attributes) result[key] = attributes[key];
        }
        return result;
    }
    function init(converter) {
        function api(key, value, attributes) {
            var result;
            if (arguments.length > 1) {
                if (attributes = extend({
                    path: "/"
                }, api.defaults, attributes), "number" == typeof attributes.expires) {
                    var expires = new Date();
                    expires.setMilliseconds(expires.getMilliseconds() + 864e5 * attributes.expires), 
                    attributes.expires = expires;
                }
                try {
                    result = JSON.stringify(value), /^[\{\[]/.test(result) && (value = result);
                } catch (e) {}
                return value = converter.write ? converter.write(value, key) : encodeURIComponent(String(value)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent), 
                key = encodeURIComponent(String(key)), key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent), 
                key = key.replace(/[\(\)]/g, escape), document.cookie = [ key, "=", value, attributes.expires && "; expires=" + attributes.expires.toUTCString(), attributes.path && "; path=" + attributes.path, attributes.domain && "; domain=" + attributes.domain, attributes.secure ? "; secure" : "" ].join("");
            }
            key || (result = {});
            for (var cookies = document.cookie ? document.cookie.split("; ") : [], rdecode = /(%[0-9A-Z]{2})+/g, i = 0; i < cookies.length; i++) {
                var parts = cookies[i].split("="), name = parts[0].replace(rdecode, decodeURIComponent), cookie = parts.slice(1).join("=");
                '"' === cookie.charAt(0) && (cookie = cookie.slice(1, -1));
                try {
                    if (cookie = converter.read ? converter.read(cookie, name) : converter(cookie, name) || cookie.replace(rdecode, decodeURIComponent), 
                    this.json) try {
                        cookie = JSON.parse(cookie);
                    } catch (e) {}
                    if (key === name) {
                        result = cookie;
                        break;
                    }
                    key || (result[name] = cookie);
                } catch (e) {}
            }
            return result;
        }
        return api.get = api.set = api, api.getJSON = function() {
            return api.apply({
                json: !0
            }, [].slice.call(arguments));
        }, api.defaults = {}, api.remove = function(key, attributes) {
            api(key, "", extend(attributes, {
                expires: -1
            }));
        }, api.withConverter = init, api;
    }
    return init(function() {});
}), jQuery(document).ready(function($) {
    $(".gold").addClass("sd0"), $(".parsley").addClass("sd05"), window.setTimeout(function() {
        $("#google-loading").addClass("fadein");
    }, 0), window.setTimeout(function() {
        $("#google-loading").addClass("fadeout");
    }, 0), $(function() {
        $('a[href*="#"]:not([href="#"])').click(function() {
            if (location.pathname.replace(/^\//, "") == this.pathname.replace(/^\//, "") && location.hostname == this.hostname) {
                var target = $(this.hash);
                if (target = target.length ? target : $("[name=" + this.hash.slice(1) + "]"), target.length) return $("html, body").animate({
                    scrollTop: target.offset().top - 100
                }, 1e3), !1;
            }
        });
    });
}), $(document).ready(function() {
    $(".panel_grid").length > 0 && $(".panel_grid").each(function() {
        $("img", this).matchHeight();
    });
}), $(document).ready(function() {
    $(".tabs-menu a").click(function(event) {
        event.preventDefault(), $(this).parent().addClass("current"), $(this).parent().siblings().removeClass("current");
        var tab = $(this).attr("href");
        $(".tab-content").not(tab).css("display", "none"), $(tab).fadeIn();
    });
}), $(document).ready(function() {
    $(".hamburger,.sliding-panel-fade-screen,.sliding-panel-close").on("click touchstart", function(e) {
        $(".sliding-panel-content,.sliding-panel-fade-screen").toggleClass("is-visible"), 
        $(".hamburger").toggleClass("is-active"), $("#cpUl-primary li").removeClass("current"), 
        $("body").toggleClass("no-scroll"), $("html").toggleClass("no-scroll"), e.preventDefault();
    }), $("#cpUl-primary li a.expand").click(function(event) {
        event.preventDefault(), $(this).parent().toggleClass("current"), $(this).parent().siblings().removeClass("current");
    }), $(".sliding-panel-subnav-dining-programs-button").click(function(event) {
        event.preventDefault(), $(".sliding-panel-subnav-dining-programs").toggleClass("current");
    });
}), $(function() {
    $("#modal-1").on("change", function() {
        $(this).is(":checked") ? $("body").addClass("modal-open") : $("body").removeClass("modal-open");
    }), $(".modal-fade-screen, .modal-close").on("click", function() {
        $(".modal-state:checked").prop("checked", !1).change();
    }), $(".modal-inner").on("click", function(e) {
        e.stopPropagation();
    });
}), $(".js-accordion-trigger").bind("click", function(e) {
    jQuery(this).parent().find(".submenu").slideToggle("fast"), jQuery(this).parent().toggleClass("is-expanded"), 
    e.preventDefault();
}), $(document).ready(function() {
    $(".expander-trigger").click(function() {
        $(this).toggleClass("expander-hidden");
    });
});

var $window = $(window), nav = $(".header-primary");

$(window).scroll(function() {
    $window.scrollTop() >= 150 ? ($(".header-primary").addClass("fixed"), $("#navigation").addClass("fixed"), 
    $(".subpage-nav-position").addClass("fixed"), $(".top-nav").addClass("hide")) : ($(".header-primary").removeClass("fixed"), 
    $("#navigation").removeClass("fixed"), $(".subpage-nav-position").removeClass("fixed"), 
    $(".top-nav").removeClass("hide"));
}), $("#subpage-collapse-toggle").length > 0 && $("#subpage-collapse-target").length > 0 && $("#subpage-collapse-toggle").on("click", function(e) {
    e.stopPropagation(), e.preventDefault(), $("#subpage-collapse-target").slideToggle();
});